image: cypress/browsers:node12.0.0-chrome73

stages:
   - install
   - build
   - test
   - deploy

# NEW
variables:
   npm_config_cache: "$CI_PROJECT_DIR/.npm"
   CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

cache:
   key:
     files:
        - package.json
   paths:
      - .npm
      - cache/Cypress
      - node_modules
# END NEW

install_dependencies:
  stage: install
  script:
    - npm ci

bundle_app:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - build/

e2etest:    
    stage: test
    before_script:
      - npm install -g http-server
      - npm install cypress
    script:
       # start the server in the background
      - npm run start:ci
      

deploy_staging_job:
  stage: deploy
  only:
    - staging
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$STAGING_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo -n "Deploy staging to test server..."
    - ssh ec2-user@$STAGING_DEPLOY_SERVER 'cd staging_CICD && git pull origin staging && pm2 restart staging'

deploy_master_job:
  stage: deploy
  only:
    - master
  before_script:
    - mkdir -p ~/.ssh
    - echo -e "$MASTER_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ls
  script:
    - scp -r build ec2-user@$MASTER_DEPLOY_SERVER:/home/ec2-user
    - ssh ec2-user@$MASTER_DEPLOY_SERVER 'rm -rf CICD/ && mv build/ CICD/'
